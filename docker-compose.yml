version: '2'
services:
  kibana:
      image: docker.elastic.co/kibana/kibana-oss:6.0.0
      networks: 
        - data-stream
      ports:
        - 5601:5601
      environment:
        - ELASTICSEARCH_URL=http://elasticsearch:9200

  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.0.0
      networks: 
        - data-stream
      ports:
        - 9200:9200
        - 9300:9300
      environment:
        - cluster.name=es-cluster
        - "ES_KAVA_OPTS=Xms1g -Xmx1g"
        - discovery.type=single-node
      ulimits:
        memlock:
          soft: -1
          hard: -1
        nofile:
          soft: 65536
          hard: 65536

  scalac: 
      # used eventually to compile the scala spark job
      image: spikerlabs/scala-sbt:scala-2.11.12-sbt-1.0.4
      command: 
        - /bin/bash
      networks: 
        - data-stream
      volumes:
        - ./spark_jobs:/tmp/spark_jobs:rw
      tty: true               
  
  spark:
      # spark 2.4.5 - scala 2.11.12
      # it does not contain scalac compiler
      # Web UI not accessible (todo?)
      image: jupyter/pyspark-notebook:spark-2
      networks: 
       - data-stream
      ports:
        - 8088:8088
        - 8042:8042        
        - 8888:8888
        - 4040-4080:4040-4080
      volumes:
        - ./spark_jobs:/home/jovyan/work                
      tty: true
  
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks: 
       - data-stream

  kafka:
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
    # https://medium.com/@marcelo.hossomi/running-kafka-in-docker-machine-64d1501d6f0b
    # https://www.kaaproject.org/blog/kafka-docker
    image: wurstmeister/kafka:2.11-2.0.0
    ports:
      - "19092:19092"   
    links:
      - zookeeper
    networks: 
       - data-stream
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "topic-test:1:1"
      # listeners: The address the socket server listens on.
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092
      # advertised.listeners: Hostname and port the broker will advertise to producers and consumers.
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL      

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks: 
  data-stream:
    driver: bridge
